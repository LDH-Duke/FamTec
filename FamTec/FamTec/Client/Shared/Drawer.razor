@using System;


<div class="drawer-container">
    <ul class="drawer-wrap">
<<<<<<< HEAD
            

     
        @foreach (var category in CategoryList)
        {

            <li class="drawer-item">
                <NavLink class="drawer-link"
                         href="@(category.Url != null ? category.Url : null)"
                         @onclick="() => ToggleDropdown(category)">
                    <span class="title">@category.Name</span>
=======
        @if (IsUser != 1)
        {
            Console.WriteLine("일반");
            <li>일반 모드</li>
        }
        else
        {
            Console.WriteLine("관리자");
            @foreach (var category in CategoryList)
            {
                <li class="drawer-item">
                    <NavLink class="drawer-link"
                             href="@(category.Url != null ? category.Url : null)"
                             @onclick="() => ToggleDropdown(category)">
                        <span class="category-title">@category.Name</span>
                        @if (category.SubCategory != null)
                        {
                            <span class="arrow">∨</span>
                        }
                    </NavLink>

>>>>>>> origin/Front
                    @if (category.SubCategory != null)
                    {
                        <ul class="drawer-sub-wrap @(category.IsDropDown ? "active" : null)">
                            @foreach (var subcategory in category.SubCategory)
                            {
                                <li class="drawer-sub-item">
                                    <NavLink class="drawer-link">
                                        @subcategory.Name
                                    </NavLink>
                                </li>
                            }
                        </ul>
                    }
<<<<<<< HEAD
                </NavLink>
                
                @if (category.SubCategory != null)
                {
                    <ul class="drawer-sub-wrap @(category.IsDropDown ? "active" : null)">
                        @foreach (var subcategory in category.SubCategory)
                        {
                            <li class="drawer-sub-item">
                                <NavLink class="drawer-link">
                                    @subcategory.Name
                                </NavLink>
                            </li>
                        }
                    </ul>
                }
            </li>
=======
                </li>
            }
>>>>>>> origin/Front
        }
    </ul>
</div>


@code {
    [Parameter] public int IsUser { get; set; }
    List<Category> CategoryList;
    public class Category
    {
        public string? Name { get; set; }
        public string? Url { get; set; }
        public List<Category>? SubCategory { get; set; }
        public bool IsDropDown { get; set; } = false;
        public string? SvgImgUrl { get; set; }
    }

    protected async override Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            CategoryList = new List<Category>
                    {
                        new Category
                        {
                            Name="사업장 관리",
                            Url = "/admin/place",
                        },
                        new Category
                        {
                            Name="매니저 관리",
                            Url = "/admin/manager",
                        },
                    };
        });
        StateHasChanged();
    }



    /*
     * 드롭다운 기능
     */

    void ToggleDropdown(Category category)
    {
        Console.WriteLine("동작");
        category.IsDropDown = !category.IsDropDown;
    }

}