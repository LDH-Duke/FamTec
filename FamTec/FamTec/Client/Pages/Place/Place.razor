@page "/admin/place"

@using FamTec.Shared.Client.DTO
@using FamTec.Client.Pages.Place.Components

<div class="place-container">
    <div class="place-table1-wrap">
        <div class="table-header">
            <span class="table-header-title">
                사업장 목록
            </span>
            <div class="table-header-option">
                <Input Placeholder="Research" />
                <Button 
                    Name="추가"
                    OnClick="@onAddPlace" />
            </div>
        </div>
        <Table Title="사업장 목록"
               Properties="@properties"
               DataList="@placeList"
               Select="@OnSelected"
               UnSelect="@UnSelected" />
        @if (is_openModal)
        {
            <AddModal Title="사업장 등록" OnClose="@OnModalClose" />
        }
    </div>
 
</div>

@code {
    /*
     * 테이블 데이터
     */
    List<PlaceDTO> PlaceList;
    List<PlaceDTO> SelecList = new List<PlaceDTO>();
    List<string> properties;
    List<object> placeList;

    List<PlaceManagerDTO> PlaceManagerList;
    List<object> placeManagerList;
    List<string> property;



    bool is_openModal = false;

    protected override async Task OnInitializedAsync()
    {
        /*
        * db 데이터 dto 객체
        */
        PlaceList = new List<PlaceDTO>
        {
            new PlaceDTO
            {
                사업장코드 = "P001",
                사업장명 = "강남우체국",
                비고 = null,
                계약번호 = "11111111",
                계약일자 = new DateTime(2023,3,8),
                계약상태 = "계약",
                IsSelect= false
            },
            new PlaceDTO
            {
                사업장코드 = "P002",
                사업장명 = "강남우체국",
                비고 = null,
                계약번호 = "22222222",
                계약일자 = new DateTime(2023,3,15),
                계약상태 = "계약",
                IsSelect= false
            },
            new PlaceDTO
            {
                사업장코드 = "P003",
                사업장명 = "강남우체국",
                비고 = null,
                계약번호 = "33333333",
                계약일자 = new DateTime(2023,8,8),
                계약상태 = "계약",
                IsSelect= false
            },
            new PlaceDTO
            {
                사업장코드 = "P004",
                사업장명 = "강남우체국",
                비고 = null,
                계약번호 = "44444444",
                계약일자 = new DateTime(2023,10,8),
                계약상태 = "계약",
                IsSelect= false
            },
            new PlaceDTO
            {
                사업장코드 = "P005",
                사업장명 = "강남우체국",
                비고 = null,
                계약번호 = "55555555",
                계약일자 = new DateTime(2023,11,8),
                계약상태 = "계약",
                IsSelect= false
            }
        };

        placeList = PlaceList.Cast<object>().ToList();
        properties = typeof(PlaceDTO).GetProperties().Select(p => p.Name).ToList();

        PlaceManagerList = new List<PlaceManagerDTO>
        {
            new PlaceManagerDTO
            {
                ID = "test1",
                NAME = "홍길동",
                DEPARTMENT = "시스템개발파트"
            },
            new PlaceManagerDTO
            {
                ID = "test2",
                NAME = "최유진",
                DEPARTMENT = "대한민국"
            },
            new PlaceManagerDTO
            {
                ID = "test3",
                NAME = "구동매",
                DEPARTMENT = "대한민국"
            },
            new PlaceManagerDTO
            {
                ID = "test3",
                NAME = "구동매",
                DEPARTMENT = "대한민국"
            },
            new PlaceManagerDTO
            {
                ID = "test3",
                NAME = "구동매",
                DEPARTMENT = "대한민국"
            }
        };

        placeManagerList = PlaceManagerList.Cast<object>().ToList();
        property = typeof(PlaceManagerDTO).GetProperties().Select(p => p.Name).ToList();
    }

    /*
    * Add to List<PlaceDTO>SelectList when able Checkbox
    */
    public void OnSelected(object row)
    {
        /*
        * To Do
        * 동일 row 중복 처리
        */
        Console.WriteLine(row);

        if(row is PlaceDTO palceRow)
        {
            if (!SelecList.Contains(row))
            {
                Console.WriteLine("추가");
                SelecList.Add(palceRow);
            }

        }



        Console.WriteLine(SelecList);
    }

    /*
    * Remove to List<PlaceDTO>SelectList when disable Checkbox
    */
    public void UnSelected(object row)
    {
        if(row is PlaceDTO palceRow)
        {
            Console.WriteLine("삭제 전");
            foreach(PlaceDTO a in SelecList)
            {

                Console.WriteLine(a.사업장코드);
            }
            SelecList.Remove(palceRow);
            Console.WriteLine("삭제 후");
            foreach (PlaceDTO a in SelecList)
            {

                Console.WriteLine(a.사업장코드);
            }
        }
    }

    /*
    * click add
    */
    private void onAddPlace()
    {
        is_openModal = true;
    }



    private void OnModalClose()
    {
        is_openModal = false;
        StateHasChanged();
    }
}
